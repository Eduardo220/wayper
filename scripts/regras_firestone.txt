rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ===================================================
    // üë§ USERS
    // ===================================================
    match /users/{userId} {
      // Usu√°rio pode ler e atualizar apenas o pr√≥prio perfil
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      // Pode criar seu documento (no primeiro login)
      allow create: if request.auth != null && request.auth.uid == userId;
    }

    // ===================================================
    // üó∫Ô∏è ZONES (√°reas conquistadas)
    // ===================================================
    match /zones/{zoneId} {
      allow read: if true; // zonas podem ser p√∫blicas para exibi√ß√£o de mapa
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    // ===================================================
    // üè™ PARTNERS (com√©rcios)
    // ===================================================
    match /partners/{partnerId} {
      // Leitura p√∫blica (para exibir quem √© o parceiro)
      allow read: if true;
      
      // Cria√ß√£o restrita a usu√°rios autenticados (ou administradores)
      allow create: if request.auth != null;
      
      // Edi√ß√£o apenas pelo dono do parceiro (valida√ß√£o via email)
      allow update, delete: if request.auth != null
        && request.resource.data.ownerEmail == request.auth.token.email;
    }

    // ===================================================
    // üìç STOPS (pontos de parada parceiros)
    // ===================================================
    match /stops/{stopId} {
      allow read: if true; // todos podem ver os pontos
      
      // Cria√ß√£o/edi√ß√£o s√≥ pelo dono do parceiro
      allow create, update, delete: if request.auth != null
        && get(/databases/$(database)/documents/partners/$(request.resource.data.partnerId)).data.ownerEmail == request.auth.token.email;
    }

    // ===================================================
    // üèÉ ACTIVITIES (corridas, visitas e b√¥nus)
    // ===================================================
    match /activities/{activityId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow delete, update: if false; // n√£o pode alterar hist√≥rico
    }

    // ===================================================
    // üõ†Ô∏è ADMIN (opcional futuro)
    // ===================================================
    match /admin/{docId} {
      allow read, write: if request.auth.token.admin == true;
    }
  }
}
